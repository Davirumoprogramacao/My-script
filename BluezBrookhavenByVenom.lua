local Whitelist = {
  "H04Ece30ZkVEbRHW", -- minha key
  "G8mL0Xp4RzW7FjKy", -- Key do bdibine
  "T2vKp9AeQd5LX3Ho",
  "J4ZFbX7mYtK8rWv2",
  "N3LXp6JkT9AeH0Wz",
  "R5W7LXp2Y8mK9ZFb",
  "X2Zm5LpK9Y3R7F0T",
  "W9FbT2Lp7Xm4K8ZV",
  "J3ZLXpK0R9Y7Wm6T",
  "R8W5ZKXpT0Lm9Y2F",
  "L7XpK9Zm2W4R8FbT",
  "T9Y2W5L7KXp4Z3mR",
  "X4LpT9R7K0W8Zm5Y",
  "Y2R7ZFb9LXp5K4T8",
  "T0W9LXp4Y3R5K7ZV",
  "K5L9Y7XmT2R8W4ZF",
  "Z7R4KXp5W8Lm2Y9T",
  "Y3R9LXp7ZmT5W4KF",
  "L7XpT0W9R2ZmK5Y8",
  "K4R9W5Y3T7LmXp2ZF",
  "R2W9LXp7T5Z3KmY8",
  "T0Y3R9W7Lp5XmK4ZF",
  "Z8XpT7K5R2Lm9W3Y"
}
local Method = nil
local Stop = nil
if not getgenv().Key then
  print("Nenhuma chave foi definida. Acesso negado.")
  return
end

-- Valida a chave
local CanAcess = false
for _, verify in ipairs(Whitelist) do
  if getgenv().Key == verify then
    CanAcess = true
    break
  end
end
-- Impede a execu√ß√£o se a chave for inv√°lida
if not CanAcess then
  print("Chave inv√°lida. Acesso negado.")
  return
end


if game.PlaceId ~= 4924922222 then
  return
end

local players = {}
for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
  table.insert(players, player.Name)
end

local props = workspace.WorkspaceCom["001_TrafficCones"]

local Players = game:GetService("Players")

local pl = game.Players.LocalPlayer
local ch = pl.Character
local hum = ch.HumanoidRootPart
local backpack = pl.Backpack
local humanoid = ch.Humanoid

local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
  pl = game.Players.LocalPlayer
  ch = pl.Character
  hum = ch.HumanoidRootPart
  backpack = pl.Backpack
  humanoid = ch.Humanoid
end)
RunService.RenderStepped:Connect(function()
  players = {} -- Limpa a tabela
  for _, player in ipairs(Players:GetPlayers()) do
    table.insert(players, player.Name) -- Adiciona nomes dos jogadores
  end
end)

local AutoUnban = nil

local lots = workspace["001_Lots"]

local function Unban()
  for _, house in ipairs(lots:GetChildren()) do
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
      if house.Name == player.Name .. "House" then
        local housePicked = house:FindFirstChild("HousePickedByPlayer")
        if housePicked then
          local houseModel = housePicked:FindFirstChild("HouseModel")
          if houseModel then
            -- Procura e destr√≥i objetos com "BannedBlock" no nome
            for _, child in ipairs(houseModel:GetChildren()) do
              if string.find(child.Name, "BannedBlock") then
                print("Destroying:", child.Name)
                child:Destroy()
              end
            end
          end
        end
      end
    end
  end
end

game:GetService("RunService").RenderStepped:Connect(function()
  if AutoUnban then
    Unban()
  end
end)

local HouseNumber = {
  1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19,
  20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37
}

local function TakeObject(tool)
  local args = {
    [1] = "PickingTools",
    [2] = tool
  }
  game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
end

local function RemoveObject(tool)
  local args = {
    [1] = "PlayerWantsToDeleteTool",
    [2] = tool
  }
  game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s"):FireServer(unpack(args))
end

local function GetPermission(houseNumber)
  local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = houseNumber
  }
  game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
local function GivePermission(player, house)
  local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players")[player],
    [3] = house
  }
  game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
local function RemovePermission(player, house)
  local args = {
    [1] = "RemovePermissionLoopToServer",
    [2] = game:GetService("Players")[player],
    [3] = house
  }
  game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
-- Script Local

-- Fun√ß√£o para teletransportar o jogador local para tr√°s de outro jogador
local function TeleportAround(player)
  local Players = game:GetService("Players")
  local RunService = game:GetService("RunService")
  
  local localPlayer = Players.LocalPlayer
  local targetPlayer = Players:FindFirstChild(player) -- Substitua pelo nome do jogador alvo.
  
  if not targetPlayer then
      warn("Jogador alvo n√£o encontrado!")
      return
  end
  
  local targetCharacter = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
  local humanoid = targetCharacter:WaitForChild("Humanoid")
  local targetRoot = targetCharacter:WaitForChild("HumanoidRootPart")
  
  local myCharacter = localPlayer.Character or localPlayer.CharacterAdded:Wait()
  local myRoot = myCharacter:WaitForChild("HumanoidRootPart")
  
  local teleporting = true -- Controle do loop de teleporte
  
  local did = false
  -- Fun√ß√£o para teleportar ao redor do jogador alvo
  local function teleportAroundTarget()
      if not targetRoot or not myRoot then return end
  
      -- Define raio horizontal e vertical para teleporte
      local radiusHorizontal = 5
      local radiusVertical = 5
  
      -- Calcula uma posi√ß√£o aleat√≥ria ao redor do jogador alvo
      local angle = math.rad(math.random(0, 360))
      local offsetHorizontal = Vector3.new(math.cos(angle) * radiusHorizontal, 0, math.sin(angle) * radiusHorizontal)
      local offsetVertical = Vector3.new(0, math.random(-radiusVertical, radiusVertical), 0)
  
      -- Posi√ß√£o final
      local teleportPosition = targetRoot.Position + offsetHorizontal + offsetVertical
  
      -- Move o jogador para a posi√ß√£o calculada e ajusta a rota√ß√£o para olhar para o alvo
      myRoot.CFrame = CFrame.new(teleportPosition, targetRoot.Position)
  end
  
  -- Monitorar o estado do Humanoid e interromper o loop quando o alvo sentar
  humanoid.StateChanged:Connect(function(_, newState)
      if newState == Enum.HumanoidStateType.Seated then
          wait(.5)
          if newState == Enum.HumanoidStateType.Seated then
            teleporting = false
          end
      end
  end)
  
  -- Loop de teleporte cont√≠nuo
  local onceDid = false
  RunService.Heartbeat:Connect(function()
      if teleporting then
        if Stop then
          return
        end
        teleportAroundTarget()
        did = false
        task.wait(0.05) -- Tempo entre os teleportes
      elseif not teleporting and not onceDid then
        wait(.3)
        local Teleport = Vector3.new(-213.10760498046875, -456.403564453125, 116.18391418457031)
        hum.Position = Teleport
        wait(.5)
        game.Players.LocalPlayer.Character.Humanoid:UnequipTools()
        wait(.5)
        game.Players.LocalPlayer.Character.Humanoid.Health = 0
        onceDid = true
        did = true
      end
  end)
end
-- Making UI
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Bluez Brookhavenüè°", HidePremium = false, SaveConfig = true, ConfigFolder = "Bluez Brookhaven"})

local House = Window:MakeTab({
  Name = "House",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})

local Perm = House:AddSection({
  Name = "Permission"
})
local Ban = House:AddSection({
  Name = "Ban"
})
local Selected = nil
Perm:AddDropdown({
  Name = "Get House permission",
  Default = "",
  Options = HouseNumber,
  Callback = function(Value)
    Selected = Value
  end
})
Perm:AddButton({
  Name = "Confirm",
  Callback = function()
    GetPermission(Selected)
  end
})
Perm:AddButton({
  Name = "Get all houses perms",
  Callback = function()
    for _, house in ipairs(lots:GetChildren()) do
      -- Verifica se o nome da casa corresponde ao nome do jogador concatenado com "House"
      for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if house.Name == player.Name .. "House" then
          -- Acesse a propriedade Number dentro da casa (house.Number.Number)
          local houseNumber = house:FindFirstChild("Number")
          
          -- Verifique se "Number" existe e se a propriedade "Number" dentro dele est√° presente
          if houseNumber and houseNumber:FindFirstChild("Number") then
            -- Chama a fun√ß√£o para conceder permiss√£o usando o valor do n√∫mero da casa
            GetPermission(houseNumber.Number.Value)
          else
            -- Caso "Number" n√£o seja encontrado ou n√£o tenha a propriedade correta
            warn("House number not found or invalid for house:", house.Name)
          end
          
          -- Adicionando delay de 0.5 segundos entre as verifica√ß√µes
          wait(0.5)
        end
      end
    end
  end
})
local tirar = nil
Perm:AddDropdown({
  Name = "Remove all House permission",
  Default = "",
  Options = HouseNumber,
  Callback = function(Option)
    tirar = Option
  end
})
Perm:AddButton({
  Name = "Confirm",
  Callback = function()
    for i, each in ipairs(Players:GetPlayers()) do
      local Table = {}
      table.insert(Table, each.Name)
      table.remove(Table, 1)
      for a, b in ipairs(Table) do
        RemovePermission(each.Name, tirar)
        wait(0.5)
      end
    end
  end
})

Ban:AddToggle({
  Name = "Auto house unban",
  Default = false,
  Callback = function(Value)
    AutoUnban = Value
  end
})
local Troll = Window:MakeTab({
  Name = "Troll",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})
local Invisible = Troll:AddSection({
  Name = "Invisible"
})
Invisible:AddButton({
  Name = "Invisible",
  Callback = function()
    local args = {
      [1] = "CharacterSizeDown",
      [2] = 5
    }
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clothe1s"):FireServer(unpack(args))
  end
})
Invisible:AddButton({
  Name = "Visible",
  Callback = function()
    local args = {
      [1] = "CharacterSizeUp",
      [2] = 1
    }
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clothe1s"):FireServer(unpack(args))
  end
})
local kill = Troll:AddSection({
  Name = "Kill"
})
local playerToKill = nil
local killDropdown = kill:AddDropdown({
  Name = "Select Player",
  Default = "",
  Options = players,
  Callback = function(Option)
    playerToKill = Option
  end
})
kill:AddDropdown({
  Name = "Select Method",
  Default = "",
  Options = {"Stretcher", "Couch"},
  Callback = function(Option)
    Method = Option
  end
})
kill:AddButton({
  Name = "Refresh",
  Callback = function()
    killDropdown:Refresh(players, true) 
  end
})
kill:AddButton({
  Name = "Kill",
  Callback = function()
    if backpack:FindFirstChild(Method) ~= true and ch:FindFirstChild(Method) ~= true then
      Stop = false
      humanoid:EquipTool(backpack:FindFirstChild(Method))
      TeleportAround(tostring(playerToKill))
    else
      TakeObject(Method)
      Stop = false
      humanoid:EquipTool(backpack:FindFirstChild(Method))
      TeleportAround(tostring(playerToKill))
    end
  end
})
kill:AddButton({
  Name = "Stop killing",
  Callback = function()
    Stop = true
  end
})
kill:AddButton({
  Name = "Sit esp",
  Callback = function()
    -- Obt√©m o jogador local
    local localPlayer = game.Players.LocalPlayer
    
    -- Loop para monitorar os jogadores
    game:GetService("RunService").RenderStepped:Connect(function()
        for _, player in pairs(game.Players:GetPlayers()) do
            -- Ignora o jogador local
            if player ~= localPlayer then
                local character = player.Character
                local localCharacter = localPlayer.Character
                if character and localCharacter then
                    local humanoid = character:FindFirstChild("Humanoid")
                    local head = character:FindFirstChild("Head")
                    local localHead = localCharacter:FindFirstChild("Head")
    
                    if head and localHead and humanoid then
                        -- Calcula a dist√¢ncia entre os jogadores
                        local distance = (localHead.Position - head.Position).Magnitude
    
                        -- Verifica se o ESP j√° existe
                        local espTag = head:FindFirstChild("ESP_Tag")
                        if not espTag then
                            -- Cria o BillboardGui para o ESP
                            espTag = Instance.new("BillboardGui", head)
                            espTag.Name = "ESP_Tag"
                            espTag.Size = UDim2.new(8, 0, 2, 0)
                            espTag.StudsOffset = Vector3.new(0, 2, 0)
                            espTag.AlwaysOnTop = true
    
                            -- Cria a TextLabel dentro do BillboardGui
                            local label = Instance.new("TextLabel", espTag)
                            label.Size = UDim2.new(1, 0, 1, 0)
                            label.BackgroundTransparency = 1
                            label.TextColor3 = Color3.new(1, 1, 1)
                            label.TextStrokeTransparency = 0.5
                            label.Font = Enum.Font.SourceSansBold
                            label.TextScaled = false
                        end
    
                        -- Atualiza o texto e o tamanho das letras
                        local label = espTag:FindFirstChildOfClass("TextLabel")
                        if label then
                            label.Text = player.Name .. " | Sentado: " .. tostring(humanoid.Sit)
                            label.TextColor3 = humanoid.Sit and Color3.new(0, 1, 0) or Color3.new(1, 0, 0)
    
                            -- Ajusta o tamanho do texto com base na dist√¢ncia (ajustado para tamanhos menores)
                            label.TextSize = math.clamp(distance / 4, 14, 20)  -- Tamanho m√≠nimo de 14 e m√°ximo de 20
                        end
                    end
                end
            end
        end
    end)
  end
})
Troll:AddLabel("[Beta]")
local Car = Window:MakeTab({
  Name = "Car",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})

local Clothes = Window:MakeTab({
  Name = "Clothes",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})
Clothes:AddSection({
  Name = "Copy Clothes"
})
local SelectedClothes = nil

-- Dropdown para selecionar o jogador
local ClothesDropdown = Clothes:AddDropdown({
    Name = "Select Player",
    Default = "",
    Options = players, -- Lista de jogadores j√° inicializada
    Callback = function(Value)
        SelectedClothes = Value -- Atualiza o jogador selecionado
    end
})

-- Bot√£o para copiar roupas
Clothes:AddButton({
    Name = "Copy Clothes",
    Callback = function()
        if SelectedClothes then
            local selectedPlayer = Players:FindFirstChild(SelectedClothes)
            if selectedPlayer and selectedPlayer.Character then
                local humanoidDescription = selectedPlayer.Character:FindFirstChildOfClass("HumanoidDescription")
                if humanoidDescription then
                    local event = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Updat1eAvata1r")
                    if event and event:IsA("RemoteEvent") then
                        for _, child in ipairs(humanoidDescription:GetChildren()) do
                            -- Verifica se o filho tem uma propriedade "Name" ou similar que indique o ID
                            if child:IsA("AccessoryDescription") or child:IsA("BodyPartDescription") then
                                local id = child.Name -- Tente acessar a propriedade relevante
                                if id and id ~= "" then
                                    print("Enviando ID:", id) -- Debug para verificar o ID
                                    event:FireServer("wear", id)
                                else
                                    warn("ID inv√°lido encontrado em:", child)
                                end
                            else
                                warn("Filho inesperado em HumanoidDescription:", child.ClassName)
                            end
                        end
                    else
                        warn("Evento remoto '1Updat1eAvata1r' n√£o encontrado ou inv√°lido!")
                    end
                else
                    warn("HumanoidDescription n√£o encontrado no jogador selecionado!")
                end
            else
                warn("Jogador ou Character inv√°lido!")
            end
        else
            warn("Nenhum jogador selecionado!")
        end
    end
})

-- Bot√£o para atualizar a lista de jogadores
Clothes:AddButton({
    Name = "Refresh",
    Callback = function()
        ClothesDropdown:Refresh(players, true) -- Atualiza o dropdown com a lista existente
    end
})
local Local = Window:MakeTab({
  Name = "Local Player",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})
Local:AddTextbox({
  Name = "Walk Speed",
  Default = "",
  TextDisappear = true,
  Callback = function(Value)
    if tonumber(Value) > 1 then
      humanoid.WalkSpeed = Value
    end
  end
})
Local:AddTextbox({
  Name = "Jump Power",
  Default = "",
  TextDisappear = true,
  Callback = function(Value)
    if tonumber(Value) > 1 then
      humanoid.JumpPower = Value
    end
  end
})
Local:AddButton({
  Name = "Prop Esp",
  Callback = function()
    local Players = game:GetService("Players")
    local props = game.Workspace.WorkspaceCom["001_TrafficCones"] -- Caminho correto dos props
    
    -- Fun√ß√£o para criar o ESP
    local function createESPForProp(prop, player)
        -- Verifica se o prop j√° tem um ESP
        local existingESP = prop:FindFirstChild("ESP_" .. player.Name)
        if existingESP then
            return -- Se j√° existir, n√£o cria outro
        end

        -- Procura qualquer filho que seja um BasePart
        local basePart = nil
        for _, child in ipairs(prop:GetChildren()) do
            if child:IsA("BasePart") then
                basePart = child
                break
            end
        end

        if basePart then
            -- Cria o BillboardGui
            local billboard = Instance.new("BillboardGui")
            billboard.Name = "ESP_" .. player.Name
            billboard.Adornee = basePart -- Associa o ESP √† BasePart
            billboard.Size = UDim2.new(5, 0, 1, 0) -- Tamanho do ESP
            billboard.StudsOffset = Vector3.new(0, 3, 0) -- Posi√ß√£o acima da BasePart
            billboard.AlwaysOnTop = true -- Sempre vis√≠vel

            -- Cria o texto
            local textLabel = Instance.new("TextLabel")
            textLabel.Text = "Prop Owner: " .. player.Name -- Nome do jogador dono do prop
            textLabel.BackgroundTransparency = 1 -- Sem fundo
            textLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- Cor do texto (branco)
            textLabel.TextScaled = true -- Escala autom√°tica do texto
            textLabel.Size = UDim2.new(1, 0, 1, 0) -- Ocupa todo o espa√ßo do BillboardGui
            textLabel.Font = Enum.Font.SourceSansBold -- Fonte do texto
            textLabel.Parent = billboard

            -- Adiciona o BillboardGui √† BasePart
            billboard.Parent = basePart

            print("ESP criado para o prop de:", player.Name)
        else
            print("Nenhuma BasePart encontrada no prop:", prop.Name)
        end
    end

    -- Fun√ß√£o para verificar e criar ESP para novos props
    local function checkAndCreateESPForNewProps()
        for _, prop in ipairs(props:GetChildren()) do
            for _, player in ipairs(Players:GetPlayers()) do
                if prop.Name == "Prop" .. player.Name then
                    createESPForProp(prop, player)
                end
            end
        end
    end

    -- Monitorar a chegada de novos props
    props.ChildAdded:Connect(function(prop)
        -- Espera um momento para garantir que o prop foi totalmente carregado
    